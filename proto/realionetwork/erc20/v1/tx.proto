syntax = "proto3";
package realionetwork.erc20.v1;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/realiotech/realio-network/x/erc20/types";

// Msg defines the erc20 Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc RegisterERC20Owner(MsgRegisterERC20Owner) returns (MsgRegisterERC20OwnerResponse);
}

message MsgRegisterERC20Owner {
  option (amino.name) = "realionetwork/x/erc20/MsgRegisterERC20Owner";
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address of the governance account.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // erc20addresses is a slice of ERC20 token contract hex addresses
  string erc20_address = 2;
  string owner = 3;
}

message MsgRegisterERC20OwnerResponse {}
