syntax = "proto3";
package realionetwork.asset.v1;

option go_package = "github.com/realiotech/realio-network/x/asset/types";

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

// Msg defines the Msg service.
service Msg {
  rpc CreateAsset(MsgCreateAsset) returns (MsgCreateAssetResponse);
  rpc SetAssetMetadata(MsgSetAssetMetadata) returns (MsgSetAssetMetadataResponse);
  rpc ChangeAdmin(MsgChangeAdmin) returns (MsgChangeAdminResponse);



  // TODO: Remove old method
  rpc CreateToken(MsgCreateToken) returns (MsgCreateTokenResponse);
  rpc UpdateToken(MsgUpdateToken) returns (MsgUpdateTokenResponse);
  rpc AuthorizeAddress(MsgAuthorizeAddress)
      returns (MsgAuthorizeAddressResponse);
  rpc UnAuthorizeAddress(MsgUnAuthorizeAddress)
      returns (MsgUnAuthorizeAddressResponse);
  // this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateAsset {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1[(cosmos_proto.scalar) = "cosmos.AddressString"];
  string asset_subname = 2;
  string total_supply = 3[
    (cosmos_proto.scalar) = "cosmos.Int", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
    ];
  bool authorization_required = 4;
}

message MsgCreateAssetResponse {}

message MsgSetAssetMetadata {
  option (cosmos.msg.v1.signer) = "admin";

  string admin = 1[(cosmos_proto.scalar) = "cosmos.AddressString"];
  string asset_name = 2;
  cosmos.bank.v1beta1.Metadata metadata = 3[
    (gogoproto.nullable) = false
  ];
}

message MsgSetAssetMetadataResponse {}

message MsgChangeAdmin {
  option (cosmos.msg.v1.signer) = "old_admin";

  string old_admin = 1[(cosmos_proto.scalar) = "cosmos.AddressString"];
  string new_admin = 2[(cosmos_proto.scalar) = "cosmos.AddressString"];
  string asset_name = 3;
}

message MsgChangeAdminResponse {}

message MsgMint {
  option (cosmos.msg.v1.signer) = "minter";

  string minter = 1[(cosmos_proto.scalar) = "cosmos.AddressString"];
  string to_address = 2[(cosmos_proto.scalar) = "cosmos.AddressString"];
  cosmos.base.v1beta1.Coin amount = 3[(gogoproto.nullable) = false];
}

message MsgMintResponse {}

message MsgBurn {
  option (cosmos.msg.v1.signer) = "burner";

  string burner = 1[(cosmos_proto.scalar) = "cosmos.AddressString"];
  string from_address = 2[(cosmos_proto.scalar) = "cosmos.AddressString"];
  cosmos.base.v1beta1.Coin amount = 3[(gogoproto.nullable) = false];
}

message MsgBurnResponse {}

message MsgFreezingAccount {
  option (cosmos.msg.v1.signer) = "admin";

  string admin = 1[(cosmos_proto.scalar) = "cosmos.AddressString"];
  string freezing_address = 2[(cosmos_proto.scalar) = "cosmos.AddressString"];
  string asset_name = 3;
}

message MsgFreezingAccountResponse {}

// TODO: Remove old method
message MsgCreateToken {
  string manager = 1;
  string name = 2;
  string symbol = 3;
  string total = 4;
  bool authorizationRequired = 6;
}

message MsgCreateTokenResponse {}

message MsgUpdateToken {
  string manager = 1;
  string symbol = 2;
  bool authorizationRequired = 3;
}

message MsgUpdateTokenResponse {}

message MsgAuthorizeAddress {
  string manager = 1;
  string symbol = 2;
  string address = 3;
}

message MsgAuthorizeAddressResponse {}

message MsgUnAuthorizeAddress {
  string manager = 1;
  string symbol = 2;
  string address = 3;
}

message MsgUnAuthorizeAddressResponse {}

// this line is used by starport scaffolding # proto/tx/message