syntax = "proto3";
package realionetwork.asset.v1;

option go_package = "github.com/realiotech/realio-network/x/asset/types";

import "gogoproto/gogo.proto";
import "realionetwork/asset/v1/params.proto";
import "realionetwork/asset/v1/token.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  // this line is used by starport scaffolding # proto/tx/rpc
  rpc CreateToken(MsgCreateToken) returns (MsgCreateTokenResponse);
  rpc AssignRoles(MsgAssignRoles) returns (MsgAssignRolesResponse);
  rpc UnassignRoles(MsgUnassignRoles) returns (MsgUnassignRolesResponse);
}

message MsgCreateToken {
  option (cosmos.msg.v1.signer) = "issuer";
  // issuer is the address that defines the token
  string issuer = 1;

  string name = 2;
  uint32 decimal = 3;
  string symbol = 4;
  string description = 5;
  repeated string managers = 6;
  repeated string distributors = 7;
  bool allow_new_extensions = 8;
  repeated string extensions_list = 9;
  string max_supply = 10 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgCreateTokenResponse {
  string token_id = 1;
}

message MsgAssignRoles {
  option (cosmos.msg.v1.signer) = "issuer";
  // issuer is the address that defines the token
  string issuer = 1;

  string token_id = 2;
  repeated string managers = 3;
  repeated string distributors = 4;
}

message MsgAssignRolesResponse {}

message MsgUnassignRoles {
  option (cosmos.msg.v1.signer) = "issuer";
  // issuer is the address that defines the token
  string issuer = 1;

  string token_id = 2;
  repeated string managers = 3;
  repeated string distributors = 4;
}

message MsgUnassignRolesResponse {}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  // authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1;

  // params defines the x/mint parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [ (gogoproto.nullable) = false ];
}

message MsgUpdateParamsResponse {}
// this line is used by starport scaffolding # proto/tx/message